{"ast":null,"code":"var _jsxFileName = \"/Users/btagaev/ant-race/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport data from '../src/data.json';\nimport DisplayAnt from './Components/DisplayAnt';\nimport { useEffect, useState } from 'react';\nimport DisplayButton from './Components/DisplayButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [load, setLoad] = useState(false);\n  const [start, setStart] = useState(false);\n  const [ants, setAnts] = useState([]);\n  const [likelihoods, setLikelihood] = useState([]);\n  const generateAntWinLikelihoodCalculator = () => {\n    const delay = 7000 + Math.random() * 7000;\n    const likelihoodOfAntWinning = Math.random();\n    return callback => {\n      setTimeout(() => {\n        callback(likelihoodOfAntWinning);\n      }, delay);\n    };\n  };\n  const calculateLikelihood = antData => {\n    const callback = generateAntWinLikelihoodCalculator();\n    callback(likelihood => {\n      const tmp = likelihoods;\n      tmp.push(Math.round(likelihood * 100) / 100);\n      setLikelihood(tmp);\n      // assign likelihood for reach\n      tmp.forEach((lk, index) => {\n        antData[index] = {\n          ...antData[index],\n          'likelihood': lk\n        };\n      });\n      console.log(antData, tmp, ants);\n      // sort by likelihood\n      antData.sort((a, b) => a.likelihood > b.likelihood ? -1 : b.likelihood > a.likelihood ? 1 : 0);\n      setAnts(antData);\n    });\n  };\n  useEffect(() => {\n    calculateLikelihood();\n  }, [start]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayButton, {\n      setStart: setStart,\n      start: start,\n      setAnts: setAnts,\n      data: data,\n      calculateLikelihood: calculateLikelihood\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), ants.length > 0 && /*#__PURE__*/_jsxDEV(DisplayAnt, {\n      ants: ants\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"s5ZSsa3A4ghIep9b/89KFcf3d8Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["data","DisplayAnt","useEffect","useState","DisplayButton","App","load","setLoad","start","setStart","ants","setAnts","likelihoods","setLikelihood","generateAntWinLikelihoodCalculator","delay","Math","random","likelihoodOfAntWinning","callback","setTimeout","calculateLikelihood","antData","likelihood","tmp","push","round","forEach","lk","index","console","log","sort","a","b","length"],"sources":["/Users/btagaev/ant-race/src/App.js"],"sourcesContent":["import './App.css';\nimport data from '../src/data.json';\nimport DisplayAnt from './Components/DisplayAnt';\nimport { useEffect, useState } from 'react';\nimport DisplayButton from './Components/DisplayButton';\n\nfunction App() {\n  const [load, setLoad] = useState(false);\n  const [start, setStart] = useState(false);\n  const [ants, setAnts] = useState([]);  \n  const [likelihoods, setLikelihood] = useState([]);\n\n  const generateAntWinLikelihoodCalculator = () => {\n    const delay = 7000 + Math.random() * 7000;\n    const likelihoodOfAntWinning = Math.random();\n\n    return (callback) => {\n        setTimeout(() => {\n            callback(likelihoodOfAntWinning);\n        }, delay);\n    };\n  }\n  \n  const calculateLikelihood = (antData) => {\n    const callback = generateAntWinLikelihoodCalculator();\n    \n    callback((likelihood) => {      \n      const tmp = likelihoods;            \n      tmp.push(Math.round(likelihood * 100) / 100);      \n      setLikelihood(tmp);\n      // assign likelihood for reach\n      tmp.forEach((lk, index) => {\n        antData[index] = {...antData[index], 'likelihood': lk};\n      })\n      console.log(antData, tmp, ants); \n      // sort by likelihood\n      antData.sort((a, b) => (a.likelihood > b.likelihood) ? -1 : (b.likelihood > a.likelihood ? 1 : 0));       \n      setAnts(antData);\n    })                    \n  }\n\n  useEffect(() => {\n    calculateLikelihood();\n  }, [start])\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">        \n      </header>\n      <DisplayButton setStart={setStart} start={start} setAnts={setAnts} data={data} calculateLikelihood={calculateLikelihood}/>\n      {ants.length > 0 && <DisplayAnt ants={ants}/>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,IAAI,MAAM,kBAAkB;AACnC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,aAAa,MAAM,4BAA4B;AAAC;AAEvD,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,WAAW,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEjD,MAAMW,kCAAkC,GAAG,MAAM;IAC/C,MAAMC,KAAK,GAAG,IAAI,GAAGC,IAAI,CAACC,MAAM,EAAE,GAAG,IAAI;IACzC,MAAMC,sBAAsB,GAAGF,IAAI,CAACC,MAAM,EAAE;IAE5C,OAAQE,QAAQ,IAAK;MACjBC,UAAU,CAAC,MAAM;QACbD,QAAQ,CAACD,sBAAsB,CAAC;MACpC,CAAC,EAAEH,KAAK,CAAC;IACb,CAAC;EACH,CAAC;EAED,MAAMM,mBAAmB,GAAIC,OAAO,IAAK;IACvC,MAAMH,QAAQ,GAAGL,kCAAkC,EAAE;IAErDK,QAAQ,CAAEI,UAAU,IAAK;MACvB,MAAMC,GAAG,GAAGZ,WAAW;MACvBY,GAAG,CAACC,IAAI,CAACT,IAAI,CAACU,KAAK,CAACH,UAAU,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;MAC5CV,aAAa,CAACW,GAAG,CAAC;MAClB;MACAA,GAAG,CAACG,OAAO,CAAC,CAACC,EAAE,EAAEC,KAAK,KAAK;QACzBP,OAAO,CAACO,KAAK,CAAC,GAAG;UAAC,GAAGP,OAAO,CAACO,KAAK,CAAC;UAAE,YAAY,EAAED;QAAE,CAAC;MACxD,CAAC,CAAC;MACFE,OAAO,CAACC,GAAG,CAACT,OAAO,EAAEE,GAAG,EAAEd,IAAI,CAAC;MAC/B;MACAY,OAAO,CAACU,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAMD,CAAC,CAACV,UAAU,GAAGW,CAAC,CAACX,UAAU,GAAI,CAAC,CAAC,GAAIW,CAAC,CAACX,UAAU,GAAGU,CAAC,CAACV,UAAU,GAAG,CAAC,GAAG,CAAE,CAAC;MAClGZ,OAAO,CAACW,OAAO,CAAC;IAClB,CAAC,CAAC;EACJ,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACdmB,mBAAmB,EAAE;EACvB,CAAC,EAAE,CAACb,KAAK,CAAC,CAAC;EAEX,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAQ,SAAS,EAAC;IAAY;MAAA;MAAA;MAAA;IAAA,QACrB,eACT,QAAC,aAAa;MAAC,QAAQ,EAAEC,QAAS;MAAC,KAAK,EAAED,KAAM;MAAC,OAAO,EAAEG,OAAQ;MAAC,IAAI,EAAEX,IAAK;MAAC,mBAAmB,EAAEqB;IAAoB;MAAA;MAAA;MAAA;IAAA,QAAE,EACzHX,IAAI,CAACyB,MAAM,GAAG,CAAC,iBAAI,QAAC,UAAU;MAAC,IAAI,EAAEzB;IAAK;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACzC;AAEV;AAAC,GA/CQL,GAAG;AAAA,KAAHA,GAAG;AAiDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}